/******************************************************* {COPYRIGHT-TOP-RM} ***
 * Licensed Materials - Property of IBM
 * "Restricted Materials of IBM"
 * 5724-S43
 *
 * (C) Copyright IBM Corporation 2006, 2014. All Rights Reserved.
 *
 * US Government Users Restricted Rights - Use, duplication, or
 * disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 ******************************************************* {COPYRIGHT-END-RM} **/

/* This policy explains how to parse the data from an XML file */
/* The schema being used here of DTD format and is specified   */
/* TOC.dtd file that is packaged along with this dsa. Before   */
/* running this policy, make sure you create the XmlFileToc    */
/* and the other data types in the TOC.dtd file, by running the*/
/* "CreatedtdTypes" script in the bin directory.               */

log("XmlFileTestPolicy");

/* First look up the top node of the file using the lookupByFilter */
dataType = "XmlFileTOC";
lookupFilter = "";  
OrgNodes = GetByFilter(dataType, lookupFilter, false);

/* From here get link to the next element of the Xml file, i.e. Book */
/* Here we demonstrate how to use the GetByLinks action module to    */
/* get access to the element contained this File                     */
dataTypes = {"FTEST_JavaXML_Book"};
TopNodes = GetByLinks(dataTypes, "", 10000, OrgNodes);
log("BookNode.xmlns_JavaXML = " + TopNodes[0].xmlns_JavaXML);
/* Now that we got to the top node, book, you can either use a       */
/* GetByLinks action module like above or use the following method to*/
/* get access to the element contained in the book, the element      */
/* Contents. You can similarly parse all the contained elements      */
BookNode = TopNodes[0].links.FTEST_JavaXML_Contents;
Log("BookNode size: " + BookNode.size);
BookNodeLinksTypes=BookNode.links;
Log("BookNodeLinksTypes size : " + BookNodeLinksTypes.size);
Log("BookNodeLinksTypes: " +BookNodeLinksTypes);
Chapters=BookNodeLinksTypes.first.FTEST_JavaXML_Chapter;
Log("Chapters and size: " +  Chapters.links.size + " " + Chapters); 
index =0;
Chapter= Chapters.first;
while(Chapter != null && Chapter != NULL) {
  index = index + 1;
  Log("Chapter" +index + ": " + Chapter); 
  Chapter= Chapters.next;
  Topics =Chapter.links.FTEST_JavaXML_Topic;
  // Log("Topics: " + Topics);
   i = 1;
   Topic=Topics.first;
   while(Topic != null && Topic != NULL) {
    Log("Topic"+i+": " + Topic.PCDATA);
    Topic=Topics.next;
    i = i +1;
   }
}
 
